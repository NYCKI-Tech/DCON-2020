[{"C:\\Users\\brend\\github\\DCON-2020\\src\\index.js":"1","C:\\Users\\brend\\github\\DCON-2020\\src\\components\\AppRouter.js":"2","C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Schedule.js":"3","C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Home.js":"4","C:\\Users\\brend\\github\\DCON-2020\\src\\components\\schedule\\Day.js":"5","C:\\Users\\brend\\github\\DCON-2020\\src\\App.js":"6","C:\\Users\\brend\\github\\DCON-2020\\src\\reportWebVitals.js":"7","C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Contact.js":"8","C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Involvement.js":"9","C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Awards.js":"10"},{"size":517,"mtime":1612146275383,"results":"11","hashOfConfig":"12"},{"size":2850,"mtime":1612146944518,"results":"13","hashOfConfig":"12"},{"size":153,"mtime":1611270422655,"results":"14","hashOfConfig":"12"},{"size":3156,"mtime":1612146465546,"results":"15","hashOfConfig":"12"},{"size":3667,"mtime":1611542281998,"results":"16","hashOfConfig":"12"},{"size":251,"mtime":1611542281993,"results":"17","hashOfConfig":"12"},{"size":375,"mtime":1611542282109,"results":"18","hashOfConfig":"12"},{"size":668,"mtime":1611539054155,"results":"19","hashOfConfig":"12"},{"size":1904,"mtime":1612653036473,"results":"20","hashOfConfig":"12"},{"size":778,"mtime":1612652731259,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q222a3",{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\brend\\github\\DCON-2020\\src\\index.js",[],"C:\\Users\\brend\\github\\DCON-2020\\src\\components\\AppRouter.js",["45","46","47","48"],"C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Schedule.js",[],"C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Home.js",["49","50","51","52","53"],"C:\\Users\\brend\\github\\DCON-2020\\src\\components\\schedule\\Day.js",["54"],"import React from 'react';\r\nimport { Markup } from 'interweave';\r\nimport Moment from 'react-moment';\r\nimport SimpleDateFormat from \"@riversun/simple-date-format\";\r\n\r\n\r\nexport default class Day extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            events: null,\r\n            day: null,\r\n            fourthStyles: {},\r\n            fifthStyles: {},\r\n            sixthStyles: {},\r\n        }    \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getEvents();\r\n    }\r\n\r\n\r\n      \r\n    getEvents(){\r\n        let that = this;\r\n        function start() {\r\n            window.gapi.client.init({\r\n                'apiKey': process.env.REACT_APP_API_KEY\r\n            }).then(function() {\r\n            return window.gapi.client.request({\r\n                'path': `https://www.googleapis.com/calendar/v3/calendars/${process.env.REACT_APP_CALENDAR_ID}/events`,\r\n            })\r\n            }).then( (response) => {\r\n                let events = response.result.items\r\n                let sortedEvents = events.sort((a, b) => {\r\n                    return (Date.parse(a.start.dateTime) - Date.parse(b.start.dateTime))\r\n                }\r\n                \r\n                );\r\n                that.setState({\r\n                    events: sortedEvents\r\n                }, ()=>{\r\n                    console.log(that.state.events);\r\n                })\r\n            }, function(reason) {\r\n                console.log(reason);\r\n            });\r\n        }\r\n        window.gapi.load('client', start)\r\n    }\r\n    \r\n    render() {\r\n        return this.state.events && (\r\n        <div className=\"dayContainer\">\r\n            <div className=\"dayButtonContainer\">\r\n                <button style={this.state.fourthStyles} id=\"dayButton\" onClick={()=>{this.setState({day:'12-04', fourthStyles:{color:'lightgrey'}, fifthStyles:{color:'white'}, sixthStyles:{color:'white'}})}}>12/4</button>\r\n                <button style={this.state.fifthStyles} id=\"dayButton\" onClick={()=>{this.setState({day:'12-05',  fourthStyles:{color:'white'}, fifthStyles:{color:'lightgrey'}, sixthStyles:{color:'white'}})}}>12/5</button>\r\n                <button style={this.state.sixthStyles} id=\"dayButton\" onClick={()=>{this.setState({day:'12-06',  fourthStyles:{color:'white'}, fifthStyles:{color:'white'}, sixthStyles:{color:'lightgrey'}})}}>12/6</button>\r\n                <button id=\"dayButton\" onClick={()=>{this.setState({day:null,  fourthStyles:{color:'white'}, fifthStyles:{color:'white'}, sixthStyles:{color:'white'}})}}>reset</button>\r\n            </div>\r\n            {this.state.events.map((event)=>{\r\n            return this.state.day? event.start.dateTime.includes(this.state.day) && (<div className=\"gcalEvent\">\r\n                <div className=\"gcalEventName\" onClick={()=>{window.open(event.location)}}>{event.summary}</div>\r\n                <div className=\"gcalEventdescription\"><Markup content={event.description} /></div>\r\n                <div className=\"gcalEventTime\">Date: <Moment format=\"MM/DD/YYYY hh:mm a\">{event.start.dateTime}</Moment> - <Moment  format=\"MM/DD/YYYY hh:mm a\">{event.end.dateTime}</Moment></div>\r\n            </div>) : (<div className=\"gcalEvent\">\r\n                <div className=\"gcalEventName\" onClick={()=>{window.open(event.location)}}>{event.summary}</div>\r\n                <div className=\"gcalEventdescription\"><Markup content={event.description} /></div>\r\n                <div className=\"gcalEventTime\">Date: <Moment format=\"MM/DD/YYYY hh:mm a\">{event.start.dateTime}</Moment> - <Moment  format=\"MM/DD/YYYY hh:mm a\">{event.end.dateTime}</Moment></div>\r\n            </div>)\r\n        })}</div>\r\n        );\r\n    }\r\n}","C:\\Users\\brend\\github\\DCON-2020\\src\\App.js",[],"C:\\Users\\brend\\github\\DCON-2020\\src\\reportWebVitals.js",[],["55","56"],"C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Contact.js",[],"C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Involvement.js",[],"C:\\Users\\brend\\github\\DCON-2020\\src\\components\\pages\\Awards.js",["57"],"import React from 'react';\r\nimport awards from '../../media/photos/awards.png';\r\n\r\nconst Awards = () => {\r\n    return(<div className=\"pageContainer\">\r\n        <img src={awards} style={{width: '30%'}}/>\r\n        <p style={{width: '50%', margin: 'auto', 'text-align':'left'}}>\r\n            <h1 style={{'text-align':'center'}}>Awards</h1>\r\n            Get your applications in by February 24th, 2021 by 11:59 PM EST for the chance to recognize your club, your members, friends, and yourself for all the hard work you've done throughout the service year!\r\n        </p>\r\n        <p style={{'margin-top': '1.2%'}}>\r\n           <button onClick={(()=>{window.location.href=\"https://bit.ly/DCONAwards\"})} >Apply here!</button>\r\n        </p>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default Awards;\r\n",{"ruleId":"58","severity":1,"message":"59","line":6,"column":5,"nodeType":"60","messageId":"61","endLine":6,"endColumn":9},{"ruleId":"58","severity":1,"message":"62","line":15,"column":25,"nodeType":"60","messageId":"61","endLine":15,"endColumn":36},{"ruleId":"58","severity":1,"message":"63","line":19,"column":9,"nodeType":"60","messageId":"61","endLine":19,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":40,"column":15,"nodeType":"66","endLine":40,"endColumn":58},{"ruleId":"58","severity":1,"message":"67","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":12},{"ruleId":"58","severity":1,"message":"68","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":26},{"ruleId":"58","severity":1,"message":"69","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"70","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":35,"column":13,"nodeType":"66","endLine":35,"endColumn":228},{"ruleId":"58","severity":1,"message":"73","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":24},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":9,"nodeType":"66","endLine":6,"endColumn":51},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'linkStyles' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'dressYourPresident' is defined but never used.","'teamLeader' is defined but never used.","'nysTshirt' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'SimpleDateFormat' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-global-assign","no-unsafe-negation"]